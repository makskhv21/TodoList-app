name: Backend & Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run Prettier check
        working-directory: ./backend
        run: npx prettier --check .

      - name: Run ESLint
        working-directory: ./backend
        run: npx eslint . --fix

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Build backend
        working-directory: ./backend
        run: npm run build

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run Prettier check
        working-directory: ./frontend
        run: npx prettier --check .

      - name: Run ESLint
        working-directory: ./frontend
        run: npx eslint . --fix

      - name: Run frontend build
        working-directory: ./frontend
        run: npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./frontend/build

  commit-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check commit message style
        run: npx commitlint --from=HEAD~1

  deployment:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy backend
        run: |
          echo "Deploying backend to server..."

      - name: Deploy frontend
        run: |
          echo "Deploying frontend to server..."
